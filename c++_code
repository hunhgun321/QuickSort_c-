#include <iostream>
#include <string>
using namespace std;

void quick_sort(int l,int h, int array[]){
    //check the condition: if l(lower index) is greater than h(upper index)
    //then the list is sorted/no need sorting
    if(l<h){
        int privot = array[l];
        int i = l, I = h;
        while(i<I){
            //find a value that is greater than target value
            do{
                i++;}
            while(array[i]<=privot);
            //find a value that is smaller than target value
            do{
                I--;}
            while(array[I]>privot);
            //while index i has not pass across index I
            if(i<I){
                //swap the value with index i and index I
                int temp = array[I];
                array[I] = array[i];
                array[i] = temp;
            }
            
        }
        //swap the target value and the value of the array at I index
        //e.g. {"10",8,6,4,#2#,$11$,58,25,44}
        //10 is the target value, 2 is the value at index I, 11 is the value at index i
        int temp = array[I];
        array[I] = array[l];
        array[l] = temp;
        //divide and conquer:after sorting a value in the list, divide the whole list into sub-lists
        //e.g.{2,8,6,4,"10",11,58,25,44}
        //"10" is the sorted value, {2,8,6,4} and {11,58,25,44} will be sorted in next two recursion
        quick_sort(l,I,array);
        quick_sort(i,h,array);
    }
    
}

int main()
{
  int a[] = {9,152,21,87,43,62,95,1,4,99999999999};
  int len_of_arr = sizeof(a)/sizeof(a[0]);
  quick_sort(0,len_of_arr-1,a);
  for(int i = 0;i<len_of_arr;i++){
      cout<<a[i]<<" ";
  }
  //learn from https://www.youtube.com/watch?v=7h1s2SojIRw
  
  return 0;
}
